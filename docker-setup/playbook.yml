---
- hosts: all
  become: true
  strategy: free
  tasks:
    - name: Install required system packages
      apt:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        update_cache: yes
        name: docker-ce
        state: latest

    - name: Install applications via pip
      pip:
        name: "{{ packages_pip }}"
      vars:
        packages_pip:
          - docker
          - jsondiff
          - pyyaml

    - name: remove swap file
      mount:
        name: swap
        fstype: swap
        state: absent

    - name: Disable swap
      command: swapoff -a

    - name: Add vagrant user to docker group
      user:
        name: vagrant
        group: docker

- hosts: docker-master
  become: true
  strategy: free
  tasks:
    - name: Initiating the swarm with default parameters
      shell: docker swarm init --advertise-addr {{ MASTER_IP_ADDRESS }}
      ignore_errors: True
      register: init_swarm

    - name: Get Worker Token
      command: docker swarm join-token worker -q
      register: worker_token

    - name: Show Worker Token
      debug: var=worker_token.stdout

    - name: Master Token
      command: docker swarm join-token manager -q
      register: master_token

    - name: Show Master Token
      debug: var=master_token.stdout

    - name: "set fact: join token worker"
      set_fact:
        join_token_worker: "{{ worker_token.stdout }}"

    - name: "set fact: join token manager"
      set_fact:
        join_token_manager: "{{ master_token.stdout }}"

- hosts: nodes
  become: true
  strategy: free
  tasks:
    - set_fact:
        token: "{{ hostvars[groups['docker-master'][0]]['join_token_worker'] }}"

    - name: Join node to cluster
      shell: docker swarm join --token {{ token }} {{ MASTER_IP_ADDRESS }}:2377
      register: worker
      ignore_errors: True

    - name: Show Results
      debug: var=worker.stdout

    - name: Show Errors
      debug: var=worker.stderr

- hosts: docker-master
  become: true
  tasks:
    - name: Convert docker-compose file
      template:
        src: docker-compose.yml.j2
        dest: /tmp/docker-compose.yml
        mode: 0777
      run_once: true

    - name: Deploy stack from a compose file
      docker_stack:
        state: present
        name: vote
        compose:
          - /tmp/docker-compose.yml
      run_once: true
